{"version":3,"sources":["index.jsx"],"names":["App","React","lazy","lazyApp","Loadable","loader","loading","props","error","_jsx","children","concat","process","window","localStorage","getItem","rootElement","document","getElementById","hasChildNodes","hydrate","render"],"mappings":"yHAAA,iEAQIA,EAAMC,IAAMC,MAAK,kBAAM,4DAmBnBC,EAAUC,IAAS,CACjBC,OAAQ,kBAAM,0DACdC,QAnBM,SAAAC,GAEV,OAAIA,EAAMC,MACDC,cAAA,OAAAC,SAAK,UAELD,cAAA,aAgBTN,IACFH,EAAMG,GAMH,GAADQ,OAAKC,IAAsB,mBACzB,GAADD,OAAKC,IAAsB,oBAGhBC,OAAOC,aAAaC,QAAQ,SAL9C,IAOMC,EAAcC,SAASC,eAAe,QACxCF,EAAYG,gBACdC,kBAAQX,cAACT,EAAG,IAAKgB,GAEjBK,iBAAOZ,cAACT,EAAG,IAAKgB,K","file":"static/js/main.f91800b5.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Loadable from \"react-loadable\";\nimport { hydrate, render } from \"react-dom\";\n//const App = process.env.REACT_APP_MODE === 'full' && import('./App.jsx')\n\n\nlet Lite = React.lazy(() => import('./Lite'));\nlet App = React.lazy(() => import('./App'));\n\nconst Loading = props => {\n\n      if (props.error) {\n        return <div>Error</div>;\n      } else {\n        return <div></div>;\n      }\n};\nif (process.env.REACT_APP_MODE === 'lite') {\n  const lazyLite = Loadable({\n          loader: () => import(\"./Lite\" /* webpackChunkName: \"web3\" */),\n          loading: Loading\n  });\n  if (lazyLite) {\n    Lite = lazyLite;\n  }\n} else {\n  const lazyApp = Loadable({\n          loader: () => import(\"./App\" /* webpackChunkName: \"web3\" */),\n          loading: Loading\n  });\n  if (lazyApp) {\n    App = lazyApp;\n  }\n}\n\nimport \"./index.css\";\nconst themes = {\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\n};\n\nconst prevTheme = window.localStorage.getItem(\"theme\");\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n/*\nReactDOM.render(\n  <App/>,\n  document.getElementById(\"root\"),\n);\n*/\n"],"sourceRoot":""}